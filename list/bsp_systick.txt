; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o..\out\bsp_systick.o --asm_dir=..\list\ --list_dir=..\list\ --depend=..\out\bsp_systick.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\src -I..\lib\STM32F10x_StdPeriph_Driver\inc -I..\lib\CMSIS\CM3\CoreSupport -I..\lib\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=528 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\out\bsp_systick.crf ..\src\timers\bsp_systick.c]
                          THUMB

                          AREA ||i.SysTick_Config||, CODE, READONLY, ALIGN=2

                  SysTick_Config PROC
;;;1693    */
;;;1694   static __INLINE uint32_t SysTick_Config(uint32_t ticks)
000000  b530              PUSH     {r4,r5,lr}
;;;1695   { 
000002  4601              MOV      r1,r0
;;;1696     if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */
000004  f1b17f80          CMP      r1,#0x1000000
000008  d301              BCC      |L1.14|
00000a  2001              MOVS     r0,#1
                  |L1.12|
;;;1697                                                                  
;;;1698     SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
;;;1699     NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Cortex-M0 System Interrupts */
;;;1700     SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
;;;1701     SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk | 
;;;1702                      SysTick_CTRL_TICKINT_Msk   | 
;;;1703                      SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Timer */
;;;1704     return (0);                                                  /* Function successful */
;;;1705   }
00000c  bd30              POP      {r4,r5,pc}
                  |L1.14|
00000e  f021407f          BIC      r0,r1,#0xff000000     ;1698
000012  1e40              SUBS     r0,r0,#1              ;1698
000014  f04f22e0          MOV      r2,#0xe000e000        ;1698
000018  6150              STR      r0,[r2,#0x14]         ;1698
00001a  1750              ASRS     r0,r2,#29             ;1699
00001c  220f              MOVS     r2,#0xf               ;1699
00001e  2800              CMP      r0,#0                 ;1699
000020  da07              BGE      |L1.50|
000022  0713              LSLS     r3,r2,#28             ;1699
000024  0e1d              LSRS     r5,r3,#24             ;1699
000026  4b09              LDR      r3,|L1.76|
000028  f000040f          AND      r4,r0,#0xf            ;1699
00002c  1f24              SUBS     r4,r4,#4              ;1699
00002e  551d              STRB     r5,[r3,r4]            ;1699
000030  e003              B        |L1.58|
                  |L1.50|
000032  0713              LSLS     r3,r2,#28             ;1699
000034  0e1c              LSRS     r4,r3,#24             ;1699
000036  4b06              LDR      r3,|L1.80|
000038  541c              STRB     r4,[r3,r0]            ;1699
                  |L1.58|
00003a  bf00              NOP                            ;1699
00003c  2000              MOVS     r0,#0                 ;1700
00003e  f04f22e0          MOV      r2,#0xe000e000        ;1700
000042  6190              STR      r0,[r2,#0x18]         ;1700
000044  2007              MOVS     r0,#7                 ;1701
000046  6110              STR      r0,[r2,#0x10]         ;1701
000048  2000              MOVS     r0,#0                 ;1704
00004a  e7df              B        |L1.12|
;;;1706   
                          ENDP

                  |L1.76|
                          DCD      0xe000ed18
                  |L1.80|
                          DCD      0xe000e400

                          AREA ||i.delay_hard||, CODE, READONLY, ALIGN=1

                  delay_hard PROC
;;;2      
;;;3      void delay_hard(uint64_t time, uint32_t unit)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;4      {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4692              MOV      r10,r2
;;;5          uint32_t max = SysTick_LOAD_RELOAD_Msk / unit;
00000a  f06f407f          MVN      r0,#0xff000000
00000e  fbb0fbfa          UDIV     r11,r0,r10
;;;6          uint32_t max_ticks = unit * max;
000012  fb0af00b          MUL      r0,r10,r11
000016  9000              STR      r0,[sp,#0]
;;;7          uint64_t times = time / max;
000018  465a              MOV      r2,r11
00001a  2300              MOVS     r3,#0
00001c  4620              MOV      r0,r4
00001e  4629              MOV      r1,r5
000020  f7fffffe          BL       __aeabi_uldivmod
000024  4606              MOV      r6,r0
000026  460f              MOV      r7,r1
;;;8          uint64_t remain = time % max;
000028  465a              MOV      r2,r11
00002a  2300              MOVS     r3,#0
00002c  4620              MOV      r0,r4
00002e  4629              MOV      r1,r5
000030  f7fffffe          BL       __aeabi_uldivmod
000034  4690              MOV      r8,r2
;;;9      
;;;10         SysTick_Config(max_ticks);
000036  9800              LDR      r0,[sp,#0]
000038  f7fffffe          BL       SysTick_Config
;;;11     
;;;12         for (; times > 0; times--)
00003c  e00a              B        |L2.84|
                  |L2.62|
;;;13             while (!((SysTick->CTRL) & (1 << 16)));
00003e  bf00              NOP      
                  |L2.64|
000040  f04f20e0          MOV      r0,#0xe000e000
000044  6900              LDR      r0,[r0,#0x10]
000046  f4003080          AND      r0,r0,#0x10000
00004a  2800              CMP      r0,#0
00004c  d0f8              BEQ      |L2.64|
00004e  1e76              SUBS     r6,r6,#1              ;12
000050  f1670700          SBC      r7,r7,#0              ;12
                  |L2.84|
000054  2100              MOVS     r1,#0                 ;12
000056  ea860001          EOR      r0,r6,r1              ;12
00005a  4079              EORS     r1,r1,r7              ;12
00005c  4308              ORRS     r0,r0,r1              ;12
00005e  d1ee              BNE      |L2.62|
;;;14     
;;;15         SysTick->CTRL &= ~SysTick_CTRL_ENABLE_Msk;
000060  f04f20e0          MOV      r0,#0xe000e000
000064  6900              LDR      r0,[r0,#0x10]
000066  f0200001          BIC      r0,r0,#1
00006a  f04f21e0          MOV      r1,#0xe000e000
00006e  6108              STR      r0,[r1,#0x10]
;;;16     
;;;17         SysTick_Config(remain * unit);
000070  fba8020a          UMULL    r0,r2,r8,r10
000074  f7fffffe          BL       SysTick_Config
;;;18     
;;;19         while (!((SysTick->CTRL) & (1 << 16)));
000078  bf00              NOP      
                  |L2.122|
00007a  f04f20e0          MOV      r0,#0xe000e000
00007e  6900              LDR      r0,[r0,#0x10]
000080  f4003080          AND      r0,r0,#0x10000
000084  2800              CMP      r0,#0
000086  d0f8              BEQ      |L2.122|
;;;20     
;;;21         SysTick->CTRL &= ~SysTick_CTRL_ENABLE_Msk;
000088  f04f20e0          MOV      r0,#0xe000e000
00008c  6900              LDR      r0,[r0,#0x10]
00008e  f0200001          BIC      r0,r0,#1
000092  f04f21e0          MOV      r1,#0xe000e000
000096  6108              STR      r0,[r1,#0x10]
;;;22     }
000098  e8bd8ff8          POP      {r3-r11,pc}
;;;23     
                          ENDP


                          AREA ||i.delay_hard_ms||, CODE, READONLY, ALIGN=2

                  delay_hard_ms PROC
;;;28     
;;;29     void delay_hard_ms(uint64_t ms)
000000  b570              PUSH     {r4-r6,lr}
;;;30     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;31         delay_hard(ms, 72000);
000006  4a03              LDR      r2,|L3.20|
000008  4620              MOV      r0,r4
00000a  4629              MOV      r1,r5
00000c  f7fffffe          BL       delay_hard
;;;32     }
000010  bd70              POP      {r4-r6,pc}
;;;33     
                          ENDP

000012  0000              DCW      0x0000
                  |L3.20|
                          DCD      0x00011940

                          AREA ||i.delay_hard_us||, CODE, READONLY, ALIGN=1

                  delay_hard_us PROC
;;;23     
;;;24     void delay_hard_us(uint64_t us)
000000  b570              PUSH     {r4-r6,lr}
;;;25     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;26         delay_hard(us, 72);
000006  2248              MOVS     r2,#0x48
000008  4620              MOV      r0,r4
00000a  4629              MOV      r1,r5
00000c  f7fffffe          BL       delay_hard
;;;27     }
000010  bd70              POP      {r4-r6,pc}
;;;28     
                          ENDP


                          AREA ||i.delay_int||, CODE, READONLY, ALIGN=2

                  delay_int PROC
;;;37     
;;;38     void delay_int(uint64_t time, uint32_t unit)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;39     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4692              MOV      r10,r2
;;;40         uint32_t max = SysTick_LOAD_RELOAD_Msk / unit;
00000a  f06f407f          MVN      r0,#0xff000000
00000e  fbb0fbfa          UDIV     r11,r0,r10
;;;41         uint32_t max_ticks = unit * max;
000012  fb0af00b          MUL      r0,r10,r11
000016  9000              STR      r0,[sp,#0]
;;;42         uint64_t times = time / max;
000018  465a              MOV      r2,r11
00001a  2300              MOVS     r3,#0
00001c  4620              MOV      r0,r4
00001e  4629              MOV      r1,r5
000020  f7fffffe          BL       __aeabi_uldivmod
000024  4680              MOV      r8,r0
000026  4689              MOV      r9,r1
;;;43         uint64_t remain = time % max;
000028  465a              MOV      r2,r11
00002a  2300              MOVS     r3,#0
00002c  4620              MOV      r0,r4
00002e  4629              MOV      r1,r5
000030  f7fffffe          BL       __aeabi_uldivmod
000034  4616              MOV      r6,r2
;;;44     
;;;45         systick_int_times = times;
000036  4a1a              LDR      r2,|L5.160|
000038  f8c28000          STR      r8,[r2,#0]  ; systick_int_times
00003c  f8c29004          STR      r9,[r2,#4]  ; systick_int_times
;;;46         SysTick_Config(max_ticks);
000040  9800              LDR      r0,[sp,#0]
000042  f7fffffe          BL       SysTick_Config
;;;47     
;;;48         while (systick_int_times);
000046  bf00              NOP      
                  |L5.72|
000048  4915              LDR      r1,|L5.160|
00004a  6808              LDR      r0,[r1,#0]  ; systick_int_times
00004c  6849              LDR      r1,[r1,#4]  ; systick_int_times
00004e  2300              MOVS     r3,#0
000050  4058              EORS     r0,r0,r3
000052  4059              EORS     r1,r1,r3
000054  4308              ORRS     r0,r0,r1
000056  d1f7              BNE      |L5.72|
;;;49     
;;;50         SysTick->CTRL &= ~SysTick_CTRL_ENABLE_Msk;
000058  f04f20e0          MOV      r0,#0xe000e000
00005c  6900              LDR      r0,[r0,#0x10]
00005e  f0200001          BIC      r0,r0,#1
000062  f04f21e0          MOV      r1,#0xe000e000
000066  6108              STR      r0,[r1,#0x10]
;;;51     
;;;52     
;;;53         systick_int_times = 1;
000068  2101              MOVS     r1,#1
00006a  2000              MOVS     r0,#0
00006c  4a0c              LDR      r2,|L5.160|
00006e  6011              STR      r1,[r2,#0]  ; systick_int_times
000070  6050              STR      r0,[r2,#4]  ; systick_int_times
;;;54         SysTick_Config(remain * unit);
000072  fba6020a          UMULL    r0,r2,r6,r10
000076  f7fffffe          BL       SysTick_Config
;;;55     
;;;56         while (systick_int_times);
00007a  bf00              NOP      
                  |L5.124|
00007c  4808              LDR      r0,|L5.160|
00007e  6801              LDR      r1,[r0,#0]  ; systick_int_times
000080  6840              LDR      r0,[r0,#4]  ; systick_int_times
000082  2200              MOVS     r2,#0
000084  4051              EORS     r1,r1,r2
000086  4050              EORS     r0,r0,r2
000088  4301              ORRS     r1,r1,r0
00008a  d1f7              BNE      |L5.124|
;;;57     
;;;58         SysTick->CTRL &= ~SysTick_CTRL_ENABLE_Msk;
00008c  f04f20e0          MOV      r0,#0xe000e000
000090  6900              LDR      r0,[r0,#0x10]
000092  f0200001          BIC      r0,r0,#1
000096  f04f21e0          MOV      r1,#0xe000e000
00009a  6108              STR      r0,[r1,#0x10]
;;;59     }
00009c  e8bd8ff8          POP      {r3-r11,pc}
;;;60     
                          ENDP

                  |L5.160|
                          DCD      systick_int_times

                          AREA ||i.delay_int_ms||, CODE, READONLY, ALIGN=2

                  delay_int_ms PROC
;;;65     
;;;66     void delay_int_ms(uint64_t ms)
000000  b570              PUSH     {r4-r6,lr}
;;;67     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;68         delay_int(ms, 72000);
000006  4a03              LDR      r2,|L6.20|
000008  4620              MOV      r0,r4
00000a  4629              MOV      r1,r5
00000c  f7fffffe          BL       delay_int
;;;69     }
000010  bd70              POP      {r4-r6,pc}
;;;70     
                          ENDP

000012  0000              DCW      0x0000
                  |L6.20|
                          DCD      0x00011940

                          AREA ||i.delay_int_us||, CODE, READONLY, ALIGN=1

                  delay_int_us PROC
;;;60     
;;;61     void delay_int_us(uint64_t us)
000000  b570              PUSH     {r4-r6,lr}
;;;62     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;63         delay_int(us, 72);
000006  2248              MOVS     r2,#0x48
000008  4620              MOV      r0,r4
00000a  4629              MOV      r1,r5
00000c  f7fffffe          BL       delay_int
;;;64     }
000010  bd70              POP      {r4-r6,pc}
;;;65     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=3

                  systick_int_times
                          %        8
