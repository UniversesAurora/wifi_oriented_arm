; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o..\out\list_display.o --asm_dir=..\list\ --list_dir=..\list\ --depend=..\out\list_display.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\src -I..\lib\STM32F10x_StdPeriph_Driver\inc -I..\lib\CMSIS\CM3\CoreSupport -I..\lib\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=528 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DDEBUG --omf_browse=..\out\list_display.crf ..\src\display\list_display.c]
                          THUMB

                          AREA ||i.infi_check||, CODE, READONLY, ALIGN=2

                  infi_check PROC
;;;115    
;;;116    static void infi_check(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;117    {
;;;118        uint8_t time_to_ref = 0;
000002  2000              MOVS     r0,#0
000004  9000              STR      r0,[sp,#0]
;;;119        ufunc(current_list);
000006  488a              LDR      r0,|L1.560|
000008  6800              LDR      r0,[r0,#0]  ; current_list
00000a  498a              LDR      r1,|L1.564|
00000c  6809              LDR      r1,[r1,#0]  ; ufunc
00000e  4788              BLX      r1
;;;120        show(NORMAL);
000010  2001              MOVS     r0,#1
000012  f7fffffe          BL       show
;;;121        tick_reg(update_time, timeout_handler, &time_to_ref);
000016  466b              MOV      r3,sp
000018  4a87              LDR      r2,|L1.568|
00001a  4988              LDR      r1,|L1.572|
00001c  c903              LDM      r1,{r0,r1}
00001e  f7fffffe          BL       tick_reg
;;;122        key_enter_open;
000022  2301              MOVS     r3,#1
000024  2208              MOVS     r2,#8
000026  2100              MOVS     r1,#0
000028  2010              MOVS     r0,#0x10
00002a  f7fffffe          BL       exti_config
;;;123        key_up_open;
00002e  2301              MOVS     r3,#1
000030  2208              MOVS     r2,#8
000032  2100              MOVS     r1,#0
000034  2004              MOVS     r0,#4
000036  f7fffffe          BL       exti_config
;;;124        key_down_open;
00003a  2301              MOVS     r3,#1
00003c  220c              MOVS     r2,#0xc
00003e  2100              MOVS     r1,#0
000040  4618              MOV      r0,r3
000042  f7fffffe          BL       exti_config
;;;125    
;;;126        while (1)
000046  e0f2              B        |L1.558|
                  |L1.72|
;;;127        {
;;;128            if (exit_flag)
000048  487d              LDR      r0,|L1.576|
00004a  7800              LDRB     r0,[r0,#0]  ; exit_flag
00004c  b100              CBZ      r0,|L1.80|
                  |L1.78|
;;;129                return;
;;;130            
;;;131            if (time_to_ref)
;;;132            {
;;;133                ufunc(current_list);
;;;134                show(NORMAL);
;;;135                time_to_ref = 0;
;;;136                tick_reg(update_time, timeout_handler, &time_to_ref);
;;;137            }
;;;138            
;;;139            if (exit_flag)
;;;140                return;
;;;141    
;;;142            if (penter)
;;;143            {
;;;144                key_enter_close;
;;;145                key_up_close;
;;;146                key_down_close;
;;;147                key_cancel_open;
;;;148                cfunc(current_list->rows[cur_sts.indicator].message);
;;;149                penter = 0;
;;;150                key_enter_open;
;;;151                key_up_open;
;;;152                key_down_open;
;;;153                key_cancel_close;
;;;154                pcancel = 0;
;;;155                ufunc(current_list);
;;;156                show(NORMAL);
;;;157            }
;;;158            
;;;159            if (exit_flag)
;;;160                return;
;;;161    
;;;162            if (pup)
;;;163            {
;;;164                if (cur_sts.indicator > 0
;;;165                        && cur_sts.indicator < current_list->row_num)
;;;166                {
;;;167                    if (cur_sts.upper_space < 1)
;;;168                    {
;;;169                        cur_sts.indicator--;
;;;170                        show(NORMAL);
;;;171                    }
;;;172                    else
;;;173                    {
;;;174                        cur_sts.upper_space--;
;;;175                        cur_sts.indicator--;
;;;176                        show(UPDATE);
;;;177                    }
;;;178                }
;;;179                else
;;;180                {
;;;181                    lcd_print_line_with_num("AT TOP!", 0, 0, hcol_num);
;;;182                    systick_delay(1000);
;;;183                    show(NORMAL);
;;;184                }
;;;185    
;;;186                pup = 0;
;;;187            }
;;;188            
;;;189            if (exit_flag)
;;;190                return;
;;;191    
;;;192            if (pdown)
;;;193            {
;;;194                if (cur_sts.indicator >= 0
;;;195                        && cur_sts.indicator < current_list->row_num - 1)
;;;196                {
;;;197                    if (hrow_num - cur_sts.upper_space < 2)
;;;198                    {
;;;199                        cur_sts.indicator++;
;;;200                        show(NORMAL);
;;;201                    }
;;;202                    else
;;;203                    {
;;;204                        cur_sts.upper_space++;
;;;205                        cur_sts.indicator++;
;;;206                        show(UPDATE);
;;;207                    }
;;;208                }
;;;209                else
;;;210                {
;;;211                    lcd_print_line_with_num("AT BOTTOM!", hrow_num - 1, 0,
;;;212                                            hcol_num);
;;;213                    systick_delay(1000);
;;;214                    show(NORMAL);
;;;215                }
;;;216    
;;;217                pdown = 0;
;;;218            }
;;;219            
;;;220            if (exit_flag)
;;;221                return;
;;;222        }
;;;223    }
00004e  bdf8              POP      {r3-r7,pc}
                  |L1.80|
000050  f89d0000          LDRB     r0,[sp,#0]            ;131
000054  b178              CBZ      r0,|L1.118|
000056  4876              LDR      r0,|L1.560|
000058  6800              LDR      r0,[r0,#0]            ;133  ; current_list
00005a  4976              LDR      r1,|L1.564|
00005c  6809              LDR      r1,[r1,#0]            ;133  ; ufunc
00005e  4788              BLX      r1                    ;133
000060  2001              MOVS     r0,#1                 ;134
000062  f7fffffe          BL       show
000066  2000              MOVS     r0,#0                 ;135
000068  9000              STR      r0,[sp,#0]            ;135
00006a  466b              MOV      r3,sp                 ;136
00006c  4a72              LDR      r2,|L1.568|
00006e  4973              LDR      r1,|L1.572|
000070  c903              LDM      r1,{r0,r1}            ;136
000072  f7fffffe          BL       tick_reg
                  |L1.118|
000076  4872              LDR      r0,|L1.576|
000078  7800              LDRB     r0,[r0,#0]            ;139  ; exit_flag
00007a  b100              CBZ      r0,|L1.126|
00007c  e7e7              B        |L1.78|
                  |L1.126|
00007e  4871              LDR      r0,|L1.580|
000080  7800              LDRB     r0,[r0,#0]            ;142  ; penter
000082  2800              CMP      r0,#0                 ;142
000084  d04a              BEQ      |L1.284|
000086  2300              MOVS     r3,#0                 ;144
000088  2208              MOVS     r2,#8                 ;144
00008a  4619              MOV      r1,r3                 ;144
00008c  2010              MOVS     r0,#0x10              ;144
00008e  f7fffffe          BL       exti_config
000092  2300              MOVS     r3,#0                 ;145
000094  2208              MOVS     r2,#8                 ;145
000096  4619              MOV      r1,r3                 ;145
000098  2004              MOVS     r0,#4                 ;145
00009a  f7fffffe          BL       exti_config
00009e  2300              MOVS     r3,#0                 ;146
0000a0  220c              MOVS     r2,#0xc               ;146
0000a2  4619              MOV      r1,r3                 ;146
0000a4  2001              MOVS     r0,#1                 ;146
0000a6  f7fffffe          BL       exti_config
0000aa  2301              MOVS     r3,#1                 ;147
0000ac  2208              MOVS     r2,#8                 ;147
0000ae  2100              MOVS     r1,#0                 ;147
0000b0  4610              MOV      r0,r2                 ;147
0000b2  f7fffffe          BL       exti_config
0000b6  4964              LDR      r1,|L1.584|
0000b8  6809              LDR      r1,[r1,#0]            ;148  ; cur_sts
0000ba  eb010241          ADD      r2,r1,r1,LSL #1       ;148
0000be  495c              LDR      r1,|L1.560|
0000c0  6809              LDR      r1,[r1,#0]            ;148  ; current_list
0000c2  3114              ADDS     r1,r1,#0x14           ;148
0000c4  eb010182          ADD      r1,r1,r2,LSL #2       ;148
0000c8  6888              LDR      r0,[r1,#8]            ;148
0000ca  4960              LDR      r1,|L1.588|
0000cc  6809              LDR      r1,[r1,#0]            ;148  ; cfunc
0000ce  4788              BLX      r1                    ;148
0000d0  2000              MOVS     r0,#0                 ;149
0000d2  495c              LDR      r1,|L1.580|
0000d4  7008              STRB     r0,[r1,#0]            ;149
0000d6  2301              MOVS     r3,#1                 ;150
0000d8  2208              MOVS     r2,#8                 ;150
0000da  2100              MOVS     r1,#0                 ;150
0000dc  2010              MOVS     r0,#0x10              ;150
0000de  f7fffffe          BL       exti_config
0000e2  2301              MOVS     r3,#1                 ;151
0000e4  2208              MOVS     r2,#8                 ;151
0000e6  2100              MOVS     r1,#0                 ;151
0000e8  2004              MOVS     r0,#4                 ;151
0000ea  f7fffffe          BL       exti_config
0000ee  2301              MOVS     r3,#1                 ;152
0000f0  220c              MOVS     r2,#0xc               ;152
0000f2  2100              MOVS     r1,#0                 ;152
0000f4  4618              MOV      r0,r3                 ;152
0000f6  f7fffffe          BL       exti_config
0000fa  2300              MOVS     r3,#0                 ;153
0000fc  2208              MOVS     r2,#8                 ;153
0000fe  4619              MOV      r1,r3                 ;153
000100  4610              MOV      r0,r2                 ;153
000102  f7fffffe          BL       exti_config
000106  2000              MOVS     r0,#0                 ;154
000108  4951              LDR      r1,|L1.592|
00010a  7008              STRB     r0,[r1,#0]            ;154
00010c  4848              LDR      r0,|L1.560|
00010e  6800              LDR      r0,[r0,#0]            ;155  ; current_list
000110  4948              LDR      r1,|L1.564|
000112  6809              LDR      r1,[r1,#0]            ;155  ; ufunc
000114  4788              BLX      r1                    ;155
000116  2001              MOVS     r0,#1                 ;156
000118  f7fffffe          BL       show
                  |L1.284|
00011c  4848              LDR      r0,|L1.576|
00011e  7800              LDRB     r0,[r0,#0]            ;159  ; exit_flag
000120  b100              CBZ      r0,|L1.292|
000122  e794              B        |L1.78|
                  |L1.292|
000124  484b              LDR      r0,|L1.596|
000126  7800              LDRB     r0,[r0,#0]            ;162  ; pup
000128  b3c0              CBZ      r0,|L1.412|
00012a  4847              LDR      r0,|L1.584|
00012c  6800              LDR      r0,[r0,#0]            ;164  ; cur_sts
00012e  2800              CMP      r0,#0                 ;164
000130  dd23              BLE      |L1.378|
000132  4845              LDR      r0,|L1.584|
000134  6800              LDR      r0,[r0,#0]            ;165  ; cur_sts
000136  17c1              ASRS     r1,r0,#31             ;165
000138  4a3d              LDR      r2,|L1.560|
00013a  6812              LDR      r2,[r2,#0]            ;165  ; current_list
00013c  e9d23202          LDRD     r3,r2,[r2,#8]         ;165
000140  1ac0              SUBS     r0,r0,r3              ;165
000142  4191              SBCS     r1,r1,r2              ;165
000144  d219              BCS      |L1.378|
000146  4840              LDR      r0,|L1.584|
000148  6840              LDR      r0,[r0,#4]            ;167  ; cur_sts
00014a  2801              CMP      r0,#1                 ;167
00014c  da08              BGE      |L1.352|
00014e  483e              LDR      r0,|L1.584|
000150  6800              LDR      r0,[r0,#0]            ;169  ; cur_sts
000152  1e40              SUBS     r0,r0,#1              ;169
000154  493c              LDR      r1,|L1.584|
000156  6008              STR      r0,[r1,#0]            ;169  ; cur_sts
000158  2001              MOVS     r0,#1                 ;170
00015a  f7fffffe          BL       show
00015e  e01a              B        |L1.406|
                  |L1.352|
000160  4839              LDR      r0,|L1.584|
000162  6840              LDR      r0,[r0,#4]            ;174  ; cur_sts
000164  1e40              SUBS     r0,r0,#1              ;174
000166  4938              LDR      r1,|L1.584|
000168  6048              STR      r0,[r1,#4]            ;174  ; cur_sts
00016a  4608              MOV      r0,r1                 ;175
00016c  6800              LDR      r0,[r0,#0]            ;175  ; cur_sts
00016e  1e40              SUBS     r0,r0,#1              ;175
000170  6008              STR      r0,[r1,#0]            ;175  ; cur_sts
000172  2000              MOVS     r0,#0                 ;176
000174  f7fffffe          BL       show
000178  e00d              B        |L1.406|
                  |L1.378|
00017a  2310              MOVS     r3,#0x10              ;181
00017c  2200              MOVS     r2,#0                 ;181
00017e  4611              MOV      r1,r2                 ;181
000180  a035              ADR      r0,|L1.600|
000182  f7fffffe          BL       lcd_print_line_with_num
000186  f44f707a          MOV      r0,#0x3e8             ;182
00018a  2100              MOVS     r1,#0                 ;182
00018c  f7fffffe          BL       systick_delay
000190  2001              MOVS     r0,#1                 ;183
000192  f7fffffe          BL       show
                  |L1.406|
000196  2000              MOVS     r0,#0                 ;186
000198  492e              LDR      r1,|L1.596|
00019a  7008              STRB     r0,[r1,#0]            ;186
                  |L1.412|
00019c  4828              LDR      r0,|L1.576|
00019e  7800              LDRB     r0,[r0,#0]            ;189  ; exit_flag
0001a0  b100              CBZ      r0,|L1.420|
0001a2  e754              B        |L1.78|
                  |L1.420|
0001a4  482e              LDR      r0,|L1.608|
0001a6  7800              LDRB     r0,[r0,#0]            ;192  ; pdown
0001a8  b3e8              CBZ      r0,|L1.550|
0001aa  4827              LDR      r0,|L1.584|
0001ac  6800              LDR      r0,[r0,#0]            ;194  ; cur_sts
0001ae  2800              CMP      r0,#0                 ;194
0001b0  db28              BLT      |L1.516|
0001b2  4825              LDR      r0,|L1.584|
0001b4  6801              LDR      r1,[r0,#0]            ;195  ; cur_sts
0001b6  17ca              ASRS     r2,r1,#31             ;195
0001b8  481d              LDR      r0,|L1.560|
0001ba  6800              LDR      r0,[r0,#0]            ;195  ; current_list
0001bc  e9d04002          LDRD     r4,r0,[r0,#8]         ;195
0001c0  1e63              SUBS     r3,r4,#1              ;195
0001c2  f1600000          SBC      r0,r0,#0              ;195
0001c6  1ac9              SUBS     r1,r1,r3              ;195
0001c8  4182              SBCS     r2,r2,r0              ;195
0001ca  d21b              BCS      |L1.516|
0001cc  481e              LDR      r0,|L1.584|
0001ce  6840              LDR      r0,[r0,#4]            ;197  ; cur_sts
0001d0  f1c00002          RSB      r0,r0,#2              ;197
0001d4  2802              CMP      r0,#2                 ;197
0001d6  da08              BGE      |L1.490|
0001d8  481b              LDR      r0,|L1.584|
0001da  6800              LDR      r0,[r0,#0]            ;199  ; cur_sts
0001dc  1c40              ADDS     r0,r0,#1              ;199
0001de  491a              LDR      r1,|L1.584|
0001e0  6008              STR      r0,[r1,#0]            ;199  ; cur_sts
0001e2  2001              MOVS     r0,#1                 ;200
0001e4  f7fffffe          BL       show
0001e8  e01a              B        |L1.544|
                  |L1.490|
0001ea  4817              LDR      r0,|L1.584|
0001ec  6840              LDR      r0,[r0,#4]            ;204  ; cur_sts
0001ee  1c40              ADDS     r0,r0,#1              ;204
0001f0  4915              LDR      r1,|L1.584|
0001f2  6048              STR      r0,[r1,#4]            ;204  ; cur_sts
0001f4  4608              MOV      r0,r1                 ;205
0001f6  6800              LDR      r0,[r0,#0]            ;205  ; cur_sts
0001f8  1c40              ADDS     r0,r0,#1              ;205
0001fa  6008              STR      r0,[r1,#0]            ;205  ; cur_sts
0001fc  2000              MOVS     r0,#0                 ;206
0001fe  f7fffffe          BL       show
000202  e00d              B        |L1.544|
                  |L1.516|
000204  2310              MOVS     r3,#0x10              ;211
000206  2200              MOVS     r2,#0                 ;211
000208  2101              MOVS     r1,#1                 ;211
00020a  a016              ADR      r0,|L1.612|
00020c  f7fffffe          BL       lcd_print_line_with_num
000210  f44f707a          MOV      r0,#0x3e8             ;213
000214  2100              MOVS     r1,#0                 ;213
000216  f7fffffe          BL       systick_delay
00021a  2001              MOVS     r0,#1                 ;214
00021c  f7fffffe          BL       show
                  |L1.544|
000220  2000              MOVS     r0,#0                 ;217
000222  490f              LDR      r1,|L1.608|
000224  7008              STRB     r0,[r1,#0]            ;217
                  |L1.550|
000226  4806              LDR      r0,|L1.576|
000228  7800              LDRB     r0,[r0,#0]            ;220  ; exit_flag
00022a  b100              CBZ      r0,|L1.558|
00022c  e70f              B        |L1.78|
                  |L1.558|
00022e  e70b              B        |L1.72|
;;;224    
                          ENDP

                  |L1.560|
                          DCD      current_list
                  |L1.564|
                          DCD      ufunc
                  |L1.568|
                          DCD      timeout_handler
                  |L1.572|
                          DCD      update_time
                  |L1.576|
                          DCD      exit_flag
                  |L1.580|
                          DCD      penter
                  |L1.584|
                          DCD      cur_sts
                  |L1.588|
                          DCD      cfunc
                  |L1.592|
                          DCD      pcancel
                  |L1.596|
                          DCD      pup
                  |L1.600|
000258  41542054          DCB      "AT TOP!",0
00025c  4f502100
                  |L1.608|
                          DCD      pdown
                  |L1.612|
000264  41542042          DCB      "AT BOTTOM!",0
000268  4f54544f
00026c  4d2100  
00026f  00                DCB      0

                          AREA ||i.list_set_callon_func||, CODE, READONLY, ALIGN=2

                  list_set_callon_func PROC
;;;33     
;;;34     void list_set_callon_func(void (* callon_func)(void*))
000000  4901              LDR      r1,|L2.8|
;;;35     {
;;;36         cfunc = callon_func;
000002  6008              STR      r0,[r1,#0]  ; cfunc
;;;37     }
000004  4770              BX       lr
;;;38     
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      cfunc

                          AREA ||i.list_set_list||, CODE, READONLY, ALIGN=2

                  list_set_list PROC
;;;17     
;;;18     void list_set_list(display_list* list)
000000  4901              LDR      r1,|L3.8|
;;;19     {
;;;20         current_list = list;
000002  6008              STR      r0,[r1,#0]  ; current_list
;;;21     }
000004  4770              BX       lr
;;;22     
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      current_list

                          AREA ||i.list_set_update_func||, CODE, READONLY, ALIGN=2

                  list_set_update_func PROC
;;;27     
;;;28     void list_set_update_func(void (* update_func)(
000000  4901              LDR      r1,|L4.8|
;;;29                                   display_list*))
;;;30     {
;;;31         ufunc = update_func;
000002  6008              STR      r0,[r1,#0]  ; ufunc
;;;32     }
000004  4770              BX       lr
;;;33     
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      ufunc

                          AREA ||i.list_set_update_time||, CODE, READONLY, ALIGN=2

                  list_set_update_time PROC
;;;22     
;;;23     void list_set_update_time(uint64_t time)
000000  4a01              LDR      r2,|L5.8|
;;;24     {
;;;25         update_time = time;
000002  c203              STM      r2!,{r0,r1}
;;;26     }
000004  4770              BX       lr
;;;27     
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      update_time

                          AREA ||i.list_start_display||, CODE, READONLY, ALIGN=2

                  list_start_display PROC
;;;230    
;;;231    int list_start_display(void)
000000  b510              PUSH     {r4,lr}
;;;232    {
;;;233        if (!current_list || !ufunc || !cfunc)
000002  480a              LDR      r0,|L6.44|
000004  6800              LDR      r0,[r0,#0]  ; current_list
000006  b128              CBZ      r0,|L6.20|
000008  4809              LDR      r0,|L6.48|
00000a  6800              LDR      r0,[r0,#0]  ; ufunc
00000c  b110              CBZ      r0,|L6.20|
00000e  4809              LDR      r0,|L6.52|
000010  6800              LDR      r0,[r0,#0]  ; cfunc
000012  b910              CBNZ     r0,|L6.26|
                  |L6.20|
;;;234            return -1;
000014  f04f30ff          MOV      r0,#0xffffffff
                  |L6.24|
;;;235    
;;;236        init_lcd_display();
;;;237        key_init();
;;;238        infi_check();
;;;239        return 0;
;;;240    }
000018  bd10              POP      {r4,pc}
                  |L6.26|
00001a  f7fffffe          BL       init_lcd_display
00001e  f7fffffe          BL       key_init
000022  f7fffffe          BL       infi_check
000026  2000              MOVS     r0,#0                 ;239
000028  e7f6              B        |L6.24|
;;;241    
                          ENDP

00002a  0000              DCW      0x0000
                  |L6.44|
                          DCD      current_list
                  |L6.48|
                          DCD      ufunc
                  |L6.52|
                          DCD      cfunc

                          AREA ||i.list_stop_display||, CODE, READONLY, ALIGN=2

                  list_stop_display PROC
;;;241    
;;;242    void list_stop_display(void)
000000  2001              MOVS     r0,#1
;;;243    {
;;;244        exit_flag = 1;
000002  4901              LDR      r1,|L7.8|
000004  7008              STRB     r0,[r1,#0]
;;;245    }
000006  4770              BX       lr
;;;246    
                          ENDP

                  |L7.8|
                          DCD      exit_flag

                          AREA ||i.show||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_c
                          REQUIRE _printf_str
                  show PROC
;;;39     
;;;40     static void show(list_update_mode mode)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;41     {
000004  4680              MOV      r8,r0
;;;42         if (current_list->row_num < 1)
000006  4867              LDR      r0,|L8.420|
000008  6800              LDR      r0,[r0,#0]  ; current_list
00000a  e9d01002          LDRD     r1,r0,[r0,#8]
00000e  1e49              SUBS     r1,r1,#1
000010  f1700000          SBCS     r0,r0,#0
000014  d203              BCS      |L8.30|
;;;43         {
;;;44             lcd_clear_screen();
000016  f7fffffe          BL       lcd_clear_screen
                  |L8.26|
;;;45             return;
;;;46         }
;;;47     
;;;48         static int old_indicator = -1;
;;;49         static int old_upper_space = -1;
;;;50         int dis_start = cur_sts.indicator - cur_sts.upper_space;
;;;51         int item_str_len = hcol_num - 1 - current_list->icon_num;
;;;52         int row_iter;
;;;53         char* indi_spa = malloc(3);
;;;54     
;;;55         if (!indi_spa)
;;;56         {
;;;57             out_of_memory;
;;;58             return;
;;;59         }
;;;60     
;;;61         sprintf(indi_spa, "%c", current_list->indicator);
;;;62     
;;;63         if (dis_start < 0)
;;;64         {
;;;65             cur_sts.indicator = 0;
;;;66             cur_sts.upper_space = 0;
;;;67             dis_start = 0;
;;;68         }
;;;69     
;;;70         if (dis_start + 1 > current_list->row_num)
;;;71         {
;;;72             cur_sts.indicator = current_list->row_num - 1;
;;;73             cur_sts.upper_space = 0;
;;;74             dis_start = current_list->row_num - 1;
;;;75         }
;;;76         else if (cur_sts.indicator > current_list->row_num - 1)
;;;77         {
;;;78             cur_sts.upper_space -= cur_sts.indicator -
;;;79                                    current_list->row_num + 1;
;;;80             cur_sts.indicator = current_list->row_num - 1;
;;;81         }
;;;82     
;;;83         if (item_str_len < 0)
;;;84             item_str_len = 0;
;;;85     
;;;86         if (old_indicator - old_upper_space != cur_sts.indicator -
;;;87                 cur_sts.upper_space || mode)
;;;88             for (row_iter = 0; row_iter < hrow_num; row_iter++)
;;;89             {
;;;90                 if (dis_start + row_iter >= current_list->row_num)
;;;91                     lcd_print_line_with_num("", row_iter, 1, hcol_num - 1);
;;;92                 else
;;;93                 {
;;;94                     lcd_print_line_with_num(current_list->rows[dis_start +
;;;95                                                       row_iter].line_name, row_iter, 1, item_str_len);
;;;96                     lcd_print_line_with_num(current_list->rows[dis_start +
;;;97                                                       row_iter].line_icon, row_iter, item_str_len + 1,
;;;98                                             current_list->icon_num);
;;;99                 }
;;;100            }
;;;101    
;;;102        for (row_iter = 0; row_iter < hrow_num; row_iter++)
;;;103        {
;;;104            if (row_iter == cur_sts.upper_space)
;;;105                lcd_print_line_with_num(indi_spa, row_iter, 0, 1);
;;;106            else
;;;107                lcd_print_line_with_num(" ", row_iter, 0, 1);
;;;108        }
;;;109    
;;;110        old_indicator = cur_sts.indicator;
;;;111        old_upper_space = cur_sts.upper_space;
;;;112        free(indi_spa);
;;;113    }
00001a  e8bd81f0          POP      {r4-r8,pc}
                  |L8.30|
00001e  4862              LDR      r0,|L8.424|
000020  6800              LDR      r0,[r0,#0]            ;50  ; cur_sts
000022  4961              LDR      r1,|L8.424|
000024  6849              LDR      r1,[r1,#4]            ;50  ; cur_sts
000026  1a45              SUBS     r5,r0,r1              ;50
000028  485e              LDR      r0,|L8.420|
00002a  6800              LDR      r0,[r0,#0]            ;51  ; current_list
00002c  7800              LDRB     r0,[r0,#0]            ;51
00002e  f1c0060f          RSB      r6,r0,#0xf            ;51
000032  2003              MOVS     r0,#3                 ;53
000034  f7fffffe          BL       malloc
000038  4607              MOV      r7,r0                 ;53
00003a  b93f              CBNZ     r7,|L8.76|
00003c  f7fffffe          BL       lcd_clear_screen
000040  2200              MOVS     r2,#0                 ;57
000042  4611              MOV      r1,r2                 ;57
000044  a059              ADR      r0,|L8.428|
000046  f7fffffe          BL       lcd_print
00004a  e7e6              B        |L8.26|
                  |L8.76|
00004c  4855              LDR      r0,|L8.420|
00004e  6800              LDR      r0,[r0,#0]            ;61  ; current_list
000050  7c02              LDRB     r2,[r0,#0x10]         ;61
000052  a159              ADR      r1,|L8.440|
000054  4638              MOV      r0,r7                 ;61
000056  f7fffffe          BL       __2sprintf
00005a  2d00              CMP      r5,#0                 ;63
00005c  da04              BGE      |L8.104|
00005e  2000              MOVS     r0,#0                 ;65
000060  4951              LDR      r1,|L8.424|
000062  6008              STR      r0,[r1,#0]            ;65  ; cur_sts
000064  6048              STR      r0,[r1,#4]            ;66  ; cur_sts
000066  2500              MOVS     r5,#0                 ;67
                  |L8.104|
000068  484e              LDR      r0,|L8.420|
00006a  6800              LDR      r0,[r0,#0]            ;70  ; current_list
00006c  e9d0c002          LDRD     r12,r0,[r0,#8]        ;70
000070  1c69              ADDS     r1,r5,#1              ;70
000072  17ca              ASRS     r2,r1,#31             ;70
000074  ebbc0101          SUBS     r1,r12,r1             ;70
000078  4190              SBCS     r0,r0,r2              ;70
00007a  d20d              BCS      |L8.152|
00007c  4849              LDR      r0,|L8.420|
00007e  6800              LDR      r0,[r0,#0]            ;72  ; current_list
000080  6881              LDR      r1,[r0,#8]            ;72
000082  1e48              SUBS     r0,r1,#1              ;72
000084  4948              LDR      r1,|L8.424|
000086  6008              STR      r0,[r1,#0]            ;72  ; cur_sts
000088  f04f0000          MOV      r0,#0                 ;73
00008c  6048              STR      r0,[r1,#4]            ;73  ; cur_sts
00008e  4845              LDR      r0,|L8.420|
000090  6800              LDR      r0,[r0,#0]            ;74  ; current_list
000092  6881              LDR      r1,[r0,#8]            ;74
000094  1e4d              SUBS     r5,r1,#1              ;74
000096  e01e              B        |L8.214|
                  |L8.152|
000098  4842              LDR      r0,|L8.420|
00009a  6800              LDR      r0,[r0,#0]            ;76  ; current_list
00009c  e9d02002          LDRD     r2,r0,[r0,#8]         ;76
0000a0  1e53              SUBS     r3,r2,#1              ;76
0000a2  f1600000          SBC      r0,r0,#0              ;76
0000a6  4940              LDR      r1,|L8.424|
0000a8  6809              LDR      r1,[r1,#0]            ;76  ; cur_sts
0000aa  17ca              ASRS     r2,r1,#31             ;76
0000ac  1a59              SUBS     r1,r3,r1              ;76
0000ae  4190              SBCS     r0,r0,r2              ;76
0000b0  d211              BCS      |L8.214|
0000b2  483d              LDR      r0,|L8.424|
0000b4  6800              LDR      r0,[r0,#0]            ;78  ; cur_sts
0000b6  493b              LDR      r1,|L8.420|
0000b8  6809              LDR      r1,[r1,#0]            ;78  ; current_list
0000ba  6889              LDR      r1,[r1,#8]            ;78
0000bc  1a40              SUBS     r0,r0,r1              ;78
0000be  1c41              ADDS     r1,r0,#1              ;78
0000c0  4839              LDR      r0,|L8.424|
0000c2  6840              LDR      r0,[r0,#4]            ;78  ; cur_sts
0000c4  1a40              SUBS     r0,r0,r1              ;78
0000c6  4938              LDR      r1,|L8.424|
0000c8  6048              STR      r0,[r1,#4]            ;78  ; cur_sts
0000ca  4836              LDR      r0,|L8.420|
0000cc  6800              LDR      r0,[r0,#0]            ;80  ; current_list
0000ce  6881              LDR      r1,[r0,#8]            ;80
0000d0  1e48              SUBS     r0,r1,#1              ;80
0000d2  4935              LDR      r1,|L8.424|
0000d4  6008              STR      r0,[r1,#0]            ;80  ; cur_sts
                  |L8.214|
0000d6  2e00              CMP      r6,#0                 ;83
0000d8  da00              BGE      |L8.220|
0000da  2600              MOVS     r6,#0                 ;84
                  |L8.220|
0000dc  4832              LDR      r0,|L8.424|
0000de  6800              LDR      r0,[r0,#0]            ;86  ; cur_sts
0000e0  4931              LDR      r1,|L8.424|
0000e2  6849              LDR      r1,[r1,#4]            ;86  ; cur_sts
0000e4  1a40              SUBS     r0,r0,r1              ;86
0000e6  4935              LDR      r1,|L8.444|
0000e8  6809              LDR      r1,[r1,#0]            ;86  ; old_indicator
0000ea  4a35              LDR      r2,|L8.448|
0000ec  6812              LDR      r2,[r2,#0]            ;86  ; old_upper_space
0000ee  1a89              SUBS     r1,r1,r2              ;86
0000f0  4288              CMP      r0,r1                 ;86
0000f2  d102              BNE      |L8.250|
0000f4  f1b80f00          CMP      r8,#0                 ;87
0000f8  d031              BEQ      |L8.350|
                  |L8.250|
0000fa  2400              MOVS     r4,#0                 ;88
0000fc  e02d              B        |L8.346|
                  |L8.254|
0000fe  1929              ADDS     r1,r5,r4              ;90
000100  17c8              ASRS     r0,r1,#31             ;90
000102  4a28              LDR      r2,|L8.420|
000104  6813              LDR      r3,[r2,#0]            ;90  ; current_list
000106  e9d32302          LDRD     r2,r3,[r3,#8]         ;90
00010a  1a89              SUBS     r1,r1,r2              ;90
00010c  4198              SBCS     r0,r0,r3              ;90
00010e  d306              BCC      |L8.286|
000110  230f              MOVS     r3,#0xf               ;91
000112  2201              MOVS     r2,#1                 ;91
000114  4621              MOV      r1,r4                 ;91
000116  a02b              ADR      r0,|L8.452|
000118  f7fffffe          BL       lcd_print_line_with_num
00011c  e01c              B        |L8.344|
                  |L8.286|
00011e  1929              ADDS     r1,r5,r4              ;94
000120  eb010241          ADD      r2,r1,r1,LSL #1       ;94
000124  491f              LDR      r1,|L8.420|
000126  6809              LDR      r1,[r1,#0]            ;94  ; current_list
000128  3114              ADDS     r1,r1,#0x14           ;94
00012a  f8510022          LDR      r0,[r1,r2,LSL #2]     ;94
00012e  4633              MOV      r3,r6                 ;94
000130  2201              MOVS     r2,#1                 ;94
000132  4621              MOV      r1,r4                 ;94
000134  f7fffffe          BL       lcd_print_line_with_num
000138  491a              LDR      r1,|L8.420|
00013a  6809              LDR      r1,[r1,#0]            ;96  ; current_list
00013c  780b              LDRB     r3,[r1,#0]            ;96
00013e  1929              ADDS     r1,r5,r4              ;96
000140  eb010241          ADD      r2,r1,r1,LSL #1       ;96
000144  4917              LDR      r1,|L8.420|
000146  6809              LDR      r1,[r1,#0]            ;96  ; current_list
000148  3114              ADDS     r1,r1,#0x14           ;96
00014a  eb010182          ADD      r1,r1,r2,LSL #2       ;96
00014e  1c72              ADDS     r2,r6,#1              ;96
000150  6848              LDR      r0,[r1,#4]            ;96
000152  4621              MOV      r1,r4                 ;96
000154  f7fffffe          BL       lcd_print_line_with_num
                  |L8.344|
000158  1c64              ADDS     r4,r4,#1              ;88
                  |L8.346|
00015a  2c02              CMP      r4,#2                 ;88
00015c  dbcf              BLT      |L8.254|
                  |L8.350|
00015e  2400              MOVS     r4,#0                 ;102
000160  e011              B        |L8.390|
                  |L8.354|
000162  4811              LDR      r0,|L8.424|
000164  6840              LDR      r0,[r0,#4]            ;104  ; cur_sts
000166  42a0              CMP      r0,r4                 ;104
000168  d106              BNE      |L8.376|
00016a  2301              MOVS     r3,#1                 ;105
00016c  2200              MOVS     r2,#0                 ;105
00016e  4621              MOV      r1,r4                 ;105
000170  4638              MOV      r0,r7                 ;105
000172  f7fffffe          BL       lcd_print_line_with_num
000176  e005              B        |L8.388|
                  |L8.376|
000178  2301              MOVS     r3,#1                 ;107
00017a  2200              MOVS     r2,#0                 ;107
00017c  4621              MOV      r1,r4                 ;107
00017e  a012              ADR      r0,|L8.456|
000180  f7fffffe          BL       lcd_print_line_with_num
                  |L8.388|
000184  1c64              ADDS     r4,r4,#1              ;102
                  |L8.390|
000186  2c02              CMP      r4,#2                 ;102
000188  dbeb              BLT      |L8.354|
00018a  4807              LDR      r0,|L8.424|
00018c  6800              LDR      r0,[r0,#0]            ;110  ; cur_sts
00018e  490b              LDR      r1,|L8.444|
000190  6008              STR      r0,[r1,#0]            ;110  ; old_indicator
000192  4805              LDR      r0,|L8.424|
000194  6840              LDR      r0,[r0,#4]            ;111  ; cur_sts
000196  490a              LDR      r1,|L8.448|
000198  6008              STR      r0,[r1,#0]            ;111  ; old_upper_space
00019a  4638              MOV      r0,r7                 ;112
00019c  f7fffffe          BL       free
0001a0  bf00              NOP      
0001a2  e73a              B        |L8.26|
;;;114    
                          ENDP

                  |L8.420|
                          DCD      current_list
                  |L8.424|
                          DCD      cur_sts
                  |L8.428|
0001ac  4e4f204d          DCB      "NO MEMORY!",0
0001b0  454d4f52
0001b4  592100  
0001b7  00                DCB      0
                  |L8.440|
0001b8  256300            DCB      "%c",0
0001bb  00                DCB      0
                  |L8.444|
                          DCD      old_indicator
                  |L8.448|
                          DCD      old_upper_space
                  |L8.452|
0001c4  00                DCB      0
0001c5  00                DCB      0
0001c6  00                DCB      0
0001c7  00                DCB      0
                  |L8.456|
0001c8  2000              DCB      " ",0
0001ca  00                DCB      0
0001cb  00                DCB      0

                          AREA ||i.test_cancel||, CODE, READONLY, ALIGN=2

                  test_cancel PROC
;;;224    
;;;225    uint8_t test_cancel(void)
000000  4801              LDR      r0,|L9.8|
;;;226    {
;;;227        return pcancel;
000002  7800              LDRB     r0,[r0,#0]  ; pcancel
;;;228    }
000004  4770              BX       lr
;;;229    
                          ENDP

000006  0000              DCW      0x0000
                  |L9.8|
                          DCD      pcancel

                          AREA ||.data||, DATA, ALIGN=3

                  current_list
                          DCD      0x00000000
                          DCD      0x00000000
                  update_time
000008  00000bb8          DCQ      0x0000000000000bb8
00000c  00000000
                  ufunc
                          DCD      0x00000000
                  cfunc
                          DCD      0x00000000
                  exit_flag
000018  00000000          DCB      0x00,0x00,0x00,0x00
                  cur_sts
                          %        8
                  penter
000024  00                DCB      0x00
                  pcancel
000025  00                DCB      0x00
                  pup
000026  00                DCB      0x00
                  pdown
000027  00                DCB      0x00
                  old_indicator
                          DCD      0xffffffff
                  old_upper_space
                          DCD      0xffffffff
